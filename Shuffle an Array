class Solution {
    public int[] nums;
    public int[] shuffleArrays;
    public Solution(int[] nums) {
        this.nums=nums;
        this.shuffleArrays=nums.clone();

    }
    
    /** Resets the array to its original configuration and return it. */
    public int[] reset() {
        this.shuffleArrays=nums.clone();
        return nums;
    }
     private List<Integer> getArrayCopy() {
        List<Integer> asList = new ArrayList<Integer>();
        for (int i = 0; i < nums.length; i++) {
            asList.add(nums[i]);
        }
        return asList;
    }
    /** Returns a random shuffling of the array. */
    public int[] shuffle() {
        
        for(int i=0;i<(this.shuffleArrays.length);i++){
            int rand = ThreadLocalRandom.current().nextInt(i,(this.shuffleArrays.length));
            System.out.println(rand);
            swap(this.shuffleArrays,i,rand);                                               
        }
        return this.shuffleArrays;

     }
    public void swap(int[] nums,int current,int random){
        int temp=nums[current];
         nums[current]=nums[random];
         nums[random]=temp;
    }                                                       
   }   
/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int[] param_1 = obj.reset();
 * int[] param_2 = obj.shuffle();
 */
