class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        int currentDupPostion=0;
        int dupTimes=0;
        int lastValue=nums[0];
        int currentValue=nums[0];
        
        if(nums.length==1){
            return 1;
        }
        int difValue=0;
        
        for(int i=1;i<nums.length;i++){
            currentValue=nums[i];
            if(currentValue==lastValue){
                dupTimes=dupTimes+1;
            }else{
                nums[i-dupTimes]=currentValue;
            }
            lastValue=currentValue;
        }
        return nums.length-dupTimes;
    }
}
class Solution {
    public int removeDuplicates(int[] nums) {
        int nonDupIndex=0;
        int lastValue=-120;
        for(int i:nums){
            if(i!=lastValue){
               nums[nonDupIndex]=i;
               nonDupIndex++;
            }
            lastValue=i;
        }
        return nonDupIndex;
    }
}
